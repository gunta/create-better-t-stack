import { useState } from "react";
import {
  View,
  Text,
  TextInput,
  TouchableOpacity,
  ScrollView,
  KeyboardAvoidingView,
  Platform,
  ActivityIndicator,
} from "react-native";
import { useChat } from "@ai-sdk/react";

export default function AIAgentScreen() {
  const [resourceId] = useState("user_123"); // In production, get from auth
  const [threadId] = useState(`chat_${Date.now()}`);
  const [researchTopic, setResearchTopic] = useState("");
  const [researchResult, setResearchResult] = useState<{
    summary: string;
    keyPoints: string[];
  } | null>(null);
  const [isResearching, setIsResearching] = useState(false);

  const { messages, input, handleInputChange, handleSubmit, isLoading } = useChat({
    api: `${process.env.EXPO_PUBLIC_SERVER_URL}/api/agent`,
    body: {
      resourceId,
      threadId,
    },
  });

  const handleResearch = async () => {
    if (!researchTopic.trim()) return;
    
    setIsResearching(true);
    try {
      const response = await fetch(`${process.env.EXPO_PUBLIC_SERVER_URL}/api/workflow`, {
        method: "POST",
        headers: { "Content-Type": "application/json" },
        body: JSON.stringify({ topic: researchTopic }),
      });
      
      if (response.ok) {
        const data = await response.json();
        setResearchResult(data);
      }
    } catch (error) {
      console.error("Research error:", error);
    } finally {
      setIsResearching(false);
    }
  };

  return (
    <KeyboardAvoidingView
      behavior={Platform.OS === "ios" ? "padding" : "height"}
      className="flex-1 bg-white"
    >
      <ScrollView className="flex-1 p-4">
        <Text className="text-3xl font-bold mb-4">AI Agent Assistant</Text>
        
        <View className="mb-6">
          <Text className="text-xl font-semibold mb-2">Chat with Agent</Text>
          <View className="bg-gray-100 rounded-lg p-4 min-h-[300px] max-h-[400px]">
            <ScrollView>
              {messages.map((message) => (
                <View
                  key={message.id}
                  className={`mb-4 ${
                    message.role === "user" ? "items-end" : "items-start"
                  }`}
                >
                  <View
                    className={`p-3 rounded-lg max-w-[80%] ${
                      message.role === "user"
                        ? "bg-blue-500"
                        : "bg-gray-300"
                    }`}
                  >
                    <Text
                      className={`text-sm font-semibold mb-1 ${
                        message.role === "user" ? "text-white" : "text-black"
                      }`}
                    >
                      {message.role === "user" ? "You" : "Assistant"}
                    </Text>
                    <Text
                      className={
                        message.role === "user" ? "text-white" : "text-black"
                      }
                    >
                      {message.content}
                    </Text>
                  </View>
                </View>
              ))}
            </ScrollView>
          </View>
          
          <View className="flex-row gap-2 mt-4">
            <TextInput
              value={input}
              onChangeText={(text) => handleInputChange({ target: { value: text } } as any)}
              placeholder="Ask anything..."
              className="flex-1 p-3 border border-gray-300 rounded-lg"
              editable={!isLoading}
            />
            <TouchableOpacity
              onPress={handleSubmit}
              disabled={isLoading}
              className={`px-4 py-3 rounded-lg ${
                isLoading ? "bg-gray-400" : "bg-blue-500"
              }`}
            >
              <Text className="text-white font-medium">
                {isLoading ? "..." : "Send"}
              </Text>
            </TouchableOpacity>
          </View>
        </View>
        
        <View className="mb-6">
          <Text className="text-xl font-semibold mb-2">Research Workflow</Text>
          <View className="flex-row gap-2 mb-4">
            <TextInput
              value={researchTopic}
              onChangeText={setResearchTopic}
              placeholder="Enter a topic to research..."
              className="flex-1 p-3 border border-gray-300 rounded-lg"
              editable={!isResearching}
            />
            <TouchableOpacity
              onPress={handleResearch}
              disabled={isResearching || !researchTopic.trim()}
              className={`px-4 py-3 rounded-lg ${
                isResearching || !researchTopic.trim()
                  ? "bg-gray-400"
                  : "bg-green-500"
              }`}
            >
              {isResearching ? (
                <ActivityIndicator color="white" />
              ) : (
                <Text className="text-white font-medium">Research</Text>
              )}
            </TouchableOpacity>
          </View>
          
          {researchResult && (
            <View className="bg-gray-100 rounded-lg p-4">
              <Text className="font-semibold mb-2">Summary:</Text>
              <Text className="text-gray-700 mb-4">{researchResult.summary}</Text>
              
              <Text className="font-semibold mb-2">Key Points:</Text>
              {researchResult.keyPoints.map((point, index) => (
                <Text key={index} className="text-gray-700 mb-1">
                  â€¢ {point}
                </Text>
              ))}
            </View>
          )}
        </View>
      </ScrollView>
    </KeyboardAvoidingView>
  );
}